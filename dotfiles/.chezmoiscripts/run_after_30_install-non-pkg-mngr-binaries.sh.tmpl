{{- if not .is_ci_workflow -}}
#!/usr/bin/env bash
{{ template "shared_script_utils.bash" . }}
{{ $current_os := .chezmoi.os }}
{{ $current_arch := .chezmoi.arch }}
{{ $is_personal_computer := .personal_computer }}
{{ $is_dev_computer := .dev_computer }}
{{ $is_homelab_member := .homelab_member }}

header "Non-package manager binary installation/update"
echo ""
{{ range $binary := .binaries}}

{{ range $system := $binary.systems }}
{{ if eq $system $current_os }}

{{ if and $binary.required_architecture (ne $binary.required_architecture $current_arch) }}
{{ continue }}
{{ end }}

{{ if $binary.install_filter }}

{{ if eq $binary.install_filter "homelab_member" }}
{{ if not $is_homelab_member }}
debug "Skipping binary installation of {{ $binary.name }} for non homelab members"
{{ continue }}
{{ end }}
{{ end }}

{{ if eq $binary.install_filter "dev_computer" }}
{{ if not $is_dev_computer }}
debug "Skipping binary installation of {{ $binary.name }} for non dev computers"
{{ continue }}
{{ end }}
{{ end }}

{{ if eq $binary.install_filter "personal_computer" }}
{{ if not $is_personal_computer }}
debug "Skipping binary installation of {{ $binary.name }} for non personal computers"
{{ continue }}
{{ end }}
{{ end }}

{{ end }}

if [[ ! $(command -v uv) ]]; then
    warning "Please install 'uv' to run the binary installation script."
    _safeExit_
fi

if [[ ! -e "${HOME}/bin/install-binary.py" ]]; then
    warning "The binary installation script is missing. Rerun chezmoi to generate it."
    _safeExit_
fi

if ! uv run -q ${HOME}/bin/install-binary.py --binary-name="{{ $binary.name }}" --repository="{{ $binary.repository }}" --version-regex="{{ $binary.version_regex }}" --remove-from-release="{{ $binary.remove_from_release }}" --executable-name="{{ $binary.executable_name }}" --description="{{ $binary.description }}"; then
    error "Could not install {{ $binary.name }}. Review error messages above."
fi


{{ end }}
{{ end }}
{{ end }}
_safeExit_
{{- end }}
