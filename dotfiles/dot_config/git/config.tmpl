[alias]
    aliases = "!if command -v pygmentize &>/dev/null; then git config -l | grep alias | cut -c 7- | pygmentize -l ini -O style=nord; else git config -l | grep alias | cut -c 7-; fi"
    amend = commit --amend

	# Switch to a branch, creating it if necessary.
	go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"

    branches = branch -a
    discard = checkout --
    filelog = log -u # All the commits related to a file
    fixup = commit --amend --no-edit
    force = "!git push origin $(git mainbranch) --force-with-lease --force-if-includes"
    forgot = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"
    mainbranch = "!git remote show origin | sed -n '/HEAD branch/s/.*: //p'"
    nevermind = "!git reset --hard HEAD && git clean -d -f"
    oops = commit --amend --no-edit
    wip = commit --amend --no-edit
    reb = "!r() { git rebase -i HEAD~${1:-2}; }; r"
    remotes = remote -v
    stashes = stash list
    subup = submodule update --init --recursive
    synced = "!git pull origin $(git mainbranch) --rebase" # Rebase on remote main
    tags = tag -l
    unadd = reset HEAD --
    undo = reset --soft HEAD~1
    unstage = reset HEAD --

    ls = log --color --pretty=oneline -n 20 --graph --abbrev-commit
    ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat -n 10
    lnc = log --pretty=format:"%h\\ %s\\ [%cn]" # No colors.  Good for pipes

[apply]
    whitespace = fix

[core]
    # Use custom `.gitignore` and `.gitattributes`
    # excludesfile = ~/.gitignore
    # attributesfile = ~/.gitattributes

    # Treat spaces before tabs and all kinds of trailing whitespace as an error
    # [default] trailing-space: looks for spaces at the end of a line
    # [default] space-before-tab: looks for spaces before tabs at the beginning of a line
    whitespace = space-before-tab,-indent-with-non-tab,trailing-space

{{- if eq .chezmoi.os "darwin" }}

    # Make `git rebase` safer on OS X
    # More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
    trustctime = false
{{- end }}

    # Prevent showing files whose names contain non-ASCII symbols as unversioned.
    # http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
    precomposeunicode = false

    # Set default editor to use VisualCode
    editor = code --wait

[color]
    ui = true

[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green

[color "diff"]
    meta = yellow
    frag = magenta bold
    old = red bold
    new = green bold
    commit = yellow bold
    whitespace = red reverse

[color "diff-highlight"]
    oldNormal = red bold
    oldHighlight = red bold 52
    newNormal = green bold
    newHighlight = green bold 22

[color "status"]
    added = yellow
    changed = green
    untracked = cyan

[diff "bin"]
    # Use `hexdump` to diff binary files
    textconv = hexdump -v -C
    algorithm = histogram

[diff]
    renames = copies # Detect copies as well as renames
    # tool = vscode
    colorMoved = default

[difftool "vscode"]
    cmd = code --wait --diff $LOCAL $REMOTE

[help]
    autocorrect = 1

[user]
  name = Nathaniel Landau
  email = {{ .email }}

[github]
   user = {{ .github_user }}

[core]
    sshCommand = ssh -i ~/.ssh_keys/git
    pager = delta

[interactive]
    diffFilter = delta --color-only

[delta]
    features = side-by-side line-numbers decorations
    hyperlinks = true
    hyperlinks-file-link-format = "vscode://file/{path}:{line}"
    minus-style = syntax "#3f0001"
    navigate = true    # use n and N to move between diff sections
    plus-style = syntax "#003800"
    side-by-side = true
    syntax-theme = "DarkNeon"

[delta "decorations"]
    commit-decoration-style = bold yellow box ul
    file-style = bold yellow ul
    file-decoration-style = none
    hunk-header-decoration-style = cyan box ul

[delta "line-numbers"]
    line-numbers-left-style = cyan
    line-numbers-right-style = cyan
    line-numbers-minus-style = 124
    line-numbers-plus-style = 28

[log]
    decorate = short
    trustExitCode = true
    keepBackup = true
    prompt = false

[merge]
    tool = vscode

[mergetool "vscode"]
    cmd = code --wait $MERGED

[pretty]
    custom = "%C(magenta)%h%C(red)%d %C(yellow)%ar %C(green)%s %C(yellow)(%an)"
    #                     │        │            │            │             └─ author
    #                     │        │            │            └─ message
    #                     │        │            └─ date (relative)
    #                     │        └─ decorations (branch, heads or tags)
    #                     └─ hash (abbreviated)

[init]
    defaultBranch = main

[pull]
    # avoid accidentally creating a merge commit when you run git pull on a branch where the upstream branch has diverged
    rebase = true

[push]
    default = current # Always push the local branch to a remote branch with the same name
    followTags = true

[pager]
    status = true
    show-branch = true

[rebase]
    autosquash = true
    autostash = true

[filter "lfs"]
    required = true
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process

# Configured for git-credential-manager
# https://github.com/git-ecosystem/git-credential-manager
[credential]
    helper =
    helper = /usr/local/share/gcm-core/git-credential-manager
{{- if ne .chezmoi.os "darwin" }}
    credentialStore = cache
    guiPrompt = false
{{- end }}
[credential "https://dev.azure.com"]
    useHttpPath = true
{{- if .use_secrets }}
[credential "{{ onepasswordRead .secrets.gitea_address }}"]
    provider = generic
{{- end }}
